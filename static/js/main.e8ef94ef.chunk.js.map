{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","TodoForm","onSubmit","setTitle","userId","setUserId","titleError","setTitleError","userIdError","setUserIdError","action","method","htmlFor","type","placeholder","value","onChange","event","target","disabled","usersFromServer","getUserByid","find","todoList","App","useState","setTodos","preventDefault","Math","max","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8ef94ef.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user?: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import usersFromServer from '../../api/users';\n\ntype Props = {\n  onSubmit: (event: React.FormEvent) => void,\n  title: string;\n  setTitle: (value: string) => void,\n  userId: number;\n  setUserId: (value: number) => void,\n  titleError: string;\n  setTitleError: (value: string) => void,\n  userIdError: string,\n  setUserIdError: (value: string) => void,\n};\n\nexport const TodoForm: React.FC<Props> = ({\n  onSubmit,\n  title,\n  setTitle,\n  userId,\n  setUserId,\n  titleError,\n  setTitleError,\n  userIdError,\n  setUserIdError,\n}) => (\n  <form\n    action=\"/api/todos\"\n    method=\"POST\"\n    onSubmit={onSubmit}\n  >\n    <div className=\"field\">\n      <label htmlFor=\"title\">Title: </label>\n      <input\n        type=\"text\"\n        data-cy=\"titleInput\"\n        id=\"title\"\n        placeholder=\"Enter a title\"\n        value={title}\n        onChange={(event) => {\n          setTitle(event.target.value);\n          setTitleError('');\n        }}\n      />\n      {titleError && (\n        <span className=\"error\">{titleError}</span>\n      )}\n    </div>\n\n    <div className=\"field\">\n      <label htmlFor=\"userSelect\">User: </label>\n      <select\n        data-cy=\"userSelect\"\n        id=\"userSelect\"\n        value={userId}\n        onChange={(event) => {\n          setUserId(+event.target.value);\n          setUserIdError('');\n        }}\n      >\n        <option value=\"0\" disabled>Choose a user</option>\n        {usersFromServer.map(user => (\n          <option key={user.id} value={user.id}>{user.name}</option>\n        ))}\n      </select>\n\n      {userIdError && (\n        <span className=\"error\">{userIdError}</span>\n      )}\n    </div>\n\n    <button\n      type=\"submit\"\n      data-cy=\"submitButton\"\n    >\n      Add\n    </button>\n  </form>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\n\nconst getUserByid = (id: number) => {\n  return usersFromServer.find(user => user.id === id);\n};\n\nconst todoList: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserByid(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todoList);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState('');\n  const [userIdError, setUserIdError] = useState('');\n\n  const handleReset = () => {\n    setTitle('');\n    setUserId(0);\n    setTitleError('');\n    setUserIdError('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setUserIdError('Please choose a user');\n    }\n\n    if (!title) {\n      setTitleError('Please enter a title');\n    }\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const id = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    const todo: Todo = {\n      id,\n      title,\n      completed: false,\n      userId,\n      user: getUserByid(userId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, todo]);\n\n    handleReset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        onSubmit={handleSubmit}\n        title={title}\n        setTitle={setTitle}\n        titleError={titleError}\n        setTitleError={setTitleError}\n        userId={userId}\n        setUserId={setUserId}\n        userIdError={userIdError}\n        setUserIdError={setUserIdError}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}